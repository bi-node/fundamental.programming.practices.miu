package medium;

/*
  Input: nums = [1,2,3,1,2,3,1,2], k = 2
Output: 6
Explanation: The longest possible good subarray is [1,2,3,1,2,3] since the values
 1, 2, and 3 occur at most twice in this subarray. Note that the subarrays [2,3,1,2,3,1] 
 and [3,1,2,3,1,2] are also good.
It can be shown that there are no good subarrays with length more than 6.
 * /
 */
public class MaxSubarrayLength {
	
	public static void main(String[] args) {
		MaxSubarrayLength test=new MaxSubarrayLength();
		int[] arr= {1,2,3,1,2,3,1,2};
		int k=2;
		System.out.println(test.maxSubarrayLength(arr, k));
		
	}
	
	 public int maxSubarrayLength(int[] nums, int k) {
		 
		 for(int i=0; i<nums.length; i++)
		 {
			 for
		 }
		 
	        
	    }
}
