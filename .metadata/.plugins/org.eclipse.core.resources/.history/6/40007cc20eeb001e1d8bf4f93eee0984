package day1;

import java.util.Stack;

public class Test {
	public static void main(String[] args) {
		System.out.println(validParenthesis("([[{}](]))"));
	}

	public static boolean validParenthesis(String s) {

		Stack<String> stack = new Stack<String>();
		String temp;

		for (int i = 0, j = 1; i < s.length(); i++, j++) {
			temp = s.substring(i, j);
			if (temp.equals("[") || temp.equals("{") || temp.equals("(")) {
				stack.push(temp);
			} else if (temp.equals(")")) {
				if (!stack.peek().equals("(")) {
					return false;
				} else
					stack.pop();
			} else if (temp.equals("]")) {
				if (!stack.peek().equals("[")) {
					return false;
				} else
					stack.pop();
			} else if (temp.equals("}")) {
				if (!stack.peek().equals("{")) {
					return false;
				} else
					stack.pop();
			}

		}
		return true;

	}

}